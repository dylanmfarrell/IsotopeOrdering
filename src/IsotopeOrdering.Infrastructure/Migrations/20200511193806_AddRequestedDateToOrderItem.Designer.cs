// <auto-generated />
using System;
using IsotopeOrdering.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IsotopeOrdering.Infrastructure.Migrations
{
    [DbContext(typeof(IsotopeOrderingDbContext))]
    [Migration("20200511193806_AddRequestedDateToOrderItem")]
    partial class AddRequestedDateToOrderItem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FedExNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ParentCustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ParentCustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.CustomerAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerAddresses");
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.CustomerDocument", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerDocuments");
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.CustomerForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("FormData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("FormId");

                    b.ToTable("CustomerForms");
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.CustomerInstitution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("InstitutionId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Relationship")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("CustomerInstitutions");
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.EntityEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EventDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("EntityEvents");
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.Form", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Forms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819),
                            IsDeleted = false,
                            Name = "Material Transfer Agreement",
                            Type = 0,
                            UpdatedBy = "SYSTEM",
                            UpdatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819)
                        });
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.Institution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxLimit")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Institutions");
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FinalComposition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaxQuantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("MinQuantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QualityControlAnalysis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reaction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpecificActivity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Unavailable")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819),
                            FinalComposition = "Copper chloride",
                            IsDeleted = false,
                            Name = "Cu-64",
                            QualityControlAnalysis = "germanium spectrum",
                            Reaction = "(p,n)",
                            SpecificActivity = "determined by TETA titration",
                            Target = "Ni-64",
                            Unavailable = false,
                            UpdatedBy = "SYSTEM",
                            UpdatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819),
                            FinalComposition = "Yttrium chloride",
                            IsDeleted = false,
                            Name = "Y-86",
                            QualityControlAnalysis = "germanium spectrum",
                            Reaction = "(p,n)",
                            SpecificActivity = "N/A",
                            Target = "Sr-86",
                            Unavailable = false,
                            UpdatedBy = "SYSTEM",
                            UpdatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819)
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819),
                            FinalComposition = "Bromide",
                            IsDeleted = false,
                            Name = "Br-76",
                            QualityControlAnalysis = "germanium spectrum",
                            Reaction = "(p,n)",
                            SpecificActivity = "N/A",
                            Target = "Se-76",
                            Unavailable = false,
                            UpdatedBy = "SYSTEM",
                            UpdatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819)
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819),
                            FinalComposition = "Bromide",
                            IsDeleted = false,
                            Name = "Br-77",
                            QualityControlAnalysis = "germanium spectrum",
                            Reaction = "(p,n)",
                            SpecificActivity = "N/A",
                            Target = "Se-77",
                            Unavailable = false,
                            UpdatedBy = "SYSTEM",
                            UpdatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819)
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819),
                            FinalComposition = "Zirconium Oxalate",
                            IsDeleted = false,
                            Name = "Zr-89",
                            QualityControlAnalysis = "germanium spectrum",
                            Reaction = "(p,n)",
                            SpecificActivity = "determined by DFO titration",
                            Target = "Y-89",
                            Unavailable = false,
                            UpdatedBy = "SYSTEM",
                            UpdatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819)
                        });
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.ItemConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal?>("MaximumAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal?>("MinimumAmount")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemConfigurations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819),
                            IsDeleted = false,
                            ItemId = 1,
                            MaximumAmount = 100m,
                            MinimumAmount = 0m,
                            Price = 1000m,
                            UpdatedBy = "SYSTEM",
                            UpdatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819)
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819),
                            IsDeleted = false,
                            ItemId = 2,
                            MaximumAmount = 100m,
                            MinimumAmount = 0m,
                            Price = 1000m,
                            UpdatedBy = "SYSTEM",
                            UpdatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819)
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819),
                            IsDeleted = false,
                            ItemId = 3,
                            MaximumAmount = 100m,
                            MinimumAmount = 0m,
                            Price = 1000m,
                            UpdatedBy = "SYSTEM",
                            UpdatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819)
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819),
                            IsDeleted = false,
                            ItemId = 4,
                            MaximumAmount = 100m,
                            MinimumAmount = 0m,
                            Price = 1000m,
                            UpdatedBy = "SYSTEM",
                            UpdatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819)
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "SYSTEM",
                            CreatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819),
                            IsDeleted = false,
                            ItemId = 5,
                            MaximumAmount = 100m,
                            MinimumAmount = 0m,
                            Price = 1000m,
                            UpdatedBy = "SYSTEM",
                            UpdatedDate = new DateTime(2020, 5, 11, 14, 38, 6, 108, DateTimeKind.Local).AddTicks(2819)
                        });
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("FedExNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ItemConfigurationId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<DateTime>("RequestedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpecialInstructions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ItemConfigurationId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourierDetails")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourierName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("ShippingCharge")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.ShipmentItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DamagedReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderItemId")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<decimal>("ShippedRadioactivity")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("OrderItemId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("ShipmentItems");
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.Customer", b =>
                {
                    b.HasOne("IsotopeOrdering.Domain.Entities.Customer", "ParentCustomer")
                        .WithMany()
                        .HasForeignKey("ParentCustomerId");

                    b.OwnsOne("IsotopeOrdering.Domain.Entities.Shared.Contact", "Contact", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnName("Email")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Fax")
                                .HasColumnName("Fax")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnName("FirstName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .HasColumnName("LastName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PhoneNumber")
                                .HasColumnName("PhoneNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");
                        });
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.CustomerAddress", b =>
                {
                    b.HasOne("IsotopeOrdering.Domain.Entities.Customer", "Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("IsotopeOrdering.Domain.Entities.Shared.Address", "Address", b1 =>
                        {
                            b1.Property<int>("CustomerAddressId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Address1")
                                .IsRequired()
                                .HasColumnName("Address1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Address2")
                                .HasColumnName("Address2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Address3")
                                .HasColumnName("Address3")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnName("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnName("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnName("State")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnName("ZipCode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("CustomerAddressId");

                            b1.ToTable("CustomerAddresses");

                            b1.WithOwner()
                                .HasForeignKey("CustomerAddressId");
                        });
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.CustomerDocument", b =>
                {
                    b.HasOne("IsotopeOrdering.Domain.Entities.Customer", "Customer")
                        .WithMany("Documents")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("IsotopeOrdering.Domain.Entities.Shared.Document", "Document", b1 =>
                        {
                            b1.Property<int>("CustomerDocumentId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Details")
                                .IsRequired()
                                .HasColumnName("Details")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnName("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid>("UploadId")
                                .HasColumnName("UploadId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("CustomerDocumentId");

                            b1.ToTable("CustomerDocuments");

                            b1.WithOwner()
                                .HasForeignKey("CustomerDocumentId");
                        });
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.CustomerForm", b =>
                {
                    b.HasOne("IsotopeOrdering.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IsotopeOrdering.Domain.Entities.Form", "Form")
                        .WithMany()
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.CustomerInstitution", b =>
                {
                    b.HasOne("IsotopeOrdering.Domain.Entities.Customer", "Customer")
                        .WithMany("Institutions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IsotopeOrdering.Domain.Entities.Institution", "Institution")
                        .WithMany("Customers")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.Institution", b =>
                {
                    b.OwnsOne("IsotopeOrdering.Domain.Entities.Shared.Address", "Address", b1 =>
                        {
                            b1.Property<int>("InstitutionId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Address1")
                                .IsRequired()
                                .HasColumnName("Address1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Address2")
                                .HasColumnName("Address2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Address3")
                                .HasColumnName("Address3")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnName("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnName("AddressName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnName("State")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnName("ZipCode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("InstitutionId");

                            b1.ToTable("Institutions");

                            b1.WithOwner()
                                .HasForeignKey("InstitutionId");
                        });

                    b.OwnsOne("IsotopeOrdering.Domain.Entities.Shared.Contact", "FinancialContact", b1 =>
                        {
                            b1.Property<int>("InstitutionId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Fax")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PhoneNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("InstitutionId");

                            b1.ToTable("Institutions");

                            b1.WithOwner()
                                .HasForeignKey("InstitutionId");
                        });

                    b.OwnsOne("IsotopeOrdering.Domain.Entities.Shared.Contact", "SafetyContact", b1 =>
                        {
                            b1.Property<int>("InstitutionId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Email")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Fax")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LastName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PhoneNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("InstitutionId");

                            b1.ToTable("Institutions");

                            b1.WithOwner()
                                .HasForeignKey("InstitutionId");
                        });

                    b.OwnsOne("IsotopeOrdering.Domain.Entities.Shared.Document", "Document", b1 =>
                        {
                            b1.Property<int>("InstitutionId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Details")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid>("UploadId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("InstitutionId");

                            b1.ToTable("Institutions");

                            b1.WithOwner()
                                .HasForeignKey("InstitutionId");
                        });
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.ItemConfiguration", b =>
                {
                    b.HasOne("IsotopeOrdering.Domain.Entities.Customer", null)
                        .WithMany("ItemConfigurations")
                        .HasForeignKey("CustomerId");

                    b.HasOne("IsotopeOrdering.Domain.Entities.Item", "Item")
                        .WithMany("ItemConfigurations")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.Order", b =>
                {
                    b.HasOne("IsotopeOrdering.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("IsotopeOrdering.Domain.Entities.Shared.Address", "Billing", b1 =>
                        {
                            b1.Property<int>("OrderId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Address1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Address2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Address3")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });

                    b.OwnsOne("IsotopeOrdering.Domain.Entities.Shared.Address", "Shipping", b1 =>
                        {
                            b1.Property<int>("OrderId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Address1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Address2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Address3")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OrderId");

                            b1.ToTable("Orders");

                            b1.WithOwner()
                                .HasForeignKey("OrderId");
                        });
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.OrderItem", b =>
                {
                    b.HasOne("IsotopeOrdering.Domain.Entities.ItemConfiguration", "ItemConfiguration")
                        .WithMany()
                        .HasForeignKey("ItemConfigurationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IsotopeOrdering.Domain.Entities.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.Shipment", b =>
                {
                    b.OwnsOne("IsotopeOrdering.Domain.Entities.Shared.Address", "Shipping", b1 =>
                        {
                            b1.Property<int>("ShipmentId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Address1")
                                .IsRequired()
                                .HasColumnName("Address1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Address2")
                                .HasColumnName("Address2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Address3")
                                .HasColumnName("Address3")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnName("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnName("AddressName")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnName("State")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ZipCode")
                                .IsRequired()
                                .HasColumnName("ZipCode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ShipmentId");

                            b1.ToTable("Shipments");

                            b1.WithOwner()
                                .HasForeignKey("ShipmentId");
                        });

                    b.OwnsOne("IsotopeOrdering.Domain.Entities.Shared.Document", "Document", b1 =>
                        {
                            b1.Property<int>("ShipmentId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Details")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<Guid>("UploadId")
                                .HasColumnType("uniqueidentifier");

                            b1.HasKey("ShipmentId");

                            b1.ToTable("Shipments");

                            b1.WithOwner()
                                .HasForeignKey("ShipmentId");
                        });
                });

            modelBuilder.Entity("IsotopeOrdering.Domain.Entities.ShipmentItem", b =>
                {
                    b.HasOne("IsotopeOrdering.Domain.Entities.OrderItem", "OrderItem")
                        .WithMany()
                        .HasForeignKey("OrderItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IsotopeOrdering.Domain.Entities.Shipment", "Shipment")
                        .WithMany("Items")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
